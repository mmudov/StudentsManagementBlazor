@page "/parent/delete/{id:int}"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementBlazor.Shared.Models
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer

<h3>Delete Parent</h3>

<hr />
<div class="row">
    <div class="com-md-12">
        <table class="table">
            <tr>
                <th>First Name</th>
                <td>@parentobj.FirstName</td>
            </tr>
            <tr>
                <th>Middle Name</th>
                <td>@parentobj.MiddleName</td>
            </tr>
            <tr>
                <th>Last Name</th>
                <td>@parentobj.LastName</td>
            </tr>
            <tr>
                <th>Email Address</th>
                <td>@parentobj.EmailAddress</td>
            </tr>
            <tr>
                <th>Parent Address</th>
                <td>@parentobj.Address</td>
            </tr>
            <tr>
                <th>Phone number</th>
                <td>@parentobj.PhoneNumber</td>
            </tr>
        </table>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="Delete"> Delete Parent</button>
        <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
    </div>
</div>

@code {
    public Parent parentobj { get; set; } = new();

    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await LoadParent();
    }
    public async Task LoadParent()
    {
        parentobj = await ParentService.GetByIdAsync(id);
    }

    protected async Task Delete()
    {
        var result = await ParentService.DeleteAsync(id);
        navigation.NavigateTo("/parents-list");
    }

    public void Cancel()
    {
        navigation.NavigateTo("parents-list");
    }
}
