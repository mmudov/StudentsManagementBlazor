@page "/add-subject"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementBlazor.Shared.Models
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime

<h3>Add Subject</h3>

<div class="row">
	<div class="com-md-12">
		<EditForm Model="subjectobj" OnValidSubmit="CreateSubject" FormName="addSubject">
			<DataAnnotationsValidator />
			<ValidationSummary />
			<div class="col-md-12">
				<div class="row">
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Subject Name</label>
							<InputText for="Name" class="form-control" @bind-Value="@subjectobj.Name" />
							<ValidationMessage For="()=>subjectobj.Name" />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Subject Description</label>
							<InputText for="Description" class="form-control" @bind-Value="@subjectobj.Description" />
							<ValidationMessage For="()=>subjectobj.Description" />
						</div>
					</div>
				</div>
				<div class="form-group mt-4">
					<button type="submit" class="btn btn-primary">Save Subject</button>
					<button type="button" @onclick="Cancel" class="btn btn-danger">Cancel</button>
				</div>
			</div>
		</EditForm>
	</div>
</div>

@code {
	[SupplyParameterFromForm]
	public Subject subjectobj { get; set; } = new();

	protected async Task CreateSubject()
	{
		var result = SubjectService.AddAsync(subjectobj);
		navigation.NavigateTo("/subjects-list");
	}
	public void Cancel()
	{
		navigation.NavigateTo("/subjects-list");
	}
}
