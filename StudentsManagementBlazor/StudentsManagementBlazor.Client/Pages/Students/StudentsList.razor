@page "/students-list"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementBlazor.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@*@rendermode InteractiveAuto*@

<div class="container">
	<div class="row">
		<p><a class="btn btn-success fload-end" href="/add-student">Add New Student</a></p>
		<div class="col-md-12">
			<div class="card">
				<div class="card-header"></div>
				@if (!AllStudents.Any())
				{
					<p><em>Loading Students...</em></p>
				}
				@if (AllStudents.Any())
				{
					<div class="card-body">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Id</th>
									<th>First Name</th>
									<th>Middle Name</th>
									<th>Last Name</th>
									<th>Email</th>
									<th>Phone No</th>
									<th>Country</th>
									<th>Edit</th>
									<th>Delete</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var student in AllStudents)
								{
									<tr>
										<td>@student.Id</td>
										<td>@student.FirstName</td>
										<td>@student.MiddleName</td>
										<td>@student.LastName</td>
										<td>@student.EmailAddress</td>
										<td>@student.PhoneNumber</td>
										<td>@student.Country</td>
										<td>
											<a class="btn btn-success" href="/student/edit/@student.Id"> Edit </a>
										</td>
										<td>
											<a class="btn btn-danger" href="/student/delete/@student.Id"> Delete </a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				}
				else
				{
					<div class="alert alert-info">There is not Students List Available</div>
				}
			</div>
		</div>
	</div>
</div>

@code{
	private List<Student> AllStudents = new List<Student>();

	protected override async Task OnInitializedAsync()
	{
		await LoadAllStudents();
	}

	private async Task LoadAllStudents()
	{
		var students = await StudentService.GetAllStudentsAsync();
		AllStudents.Clear();

		if (students is null) return;

		foreach(var student in students)
		{
			AllStudents.Add(student);
		}
	}
}
