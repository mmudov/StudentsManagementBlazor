@page "/books-list"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime

<div class="container">
	<div class="row">
		<p><a class="btn btn-success fload-end" href="/add-book">Add New Book</a></p>
		<div class="col-md-12">
			<div class="card">
				<div class="card-header"></div>
				@if (!AllBooks.Any())
				{
					<p><em>Loading Books...</em></p>
				}
				@if (AllBooks.Any())
				{
					<div class="card-body">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Id</th>
									<th>Book Name</th>
									<th>Book Author</th>
									<th>No of Copies</th>
									<th>Category</th>
									<th>Edit</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var book in AllBooks)
								{
									<tr>
										<td>@book.Id</td>
										<td>@book.Name</td>
										<td>@book.Author</td>
										<td>@book.NoOfCopy</td>
										<td>@book.BookCategory.Description</td>
										<td>
											<a class="btn btn-success" href="/book/edit/@book.Id"> Edit </a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				}
				else
				{
					<div class="alert alert-info">There is no Books List Available</div>
				}
			</div>
		</div>
	</div>
</div>

@code {
	public List<Book> AllBooks { get; set; } = new();

	public Book book = new Book();

	protected override async Task OnInitializedAsync()
	{
		await LoadAllBooks();
	}
	public async Task LoadAllBooks()
	{
		var data = await BookService.GetAllAsync();

		if (data is null) return;

		AllBooks.Clear();

		AllBooks.AddRange(data);
	}
}
