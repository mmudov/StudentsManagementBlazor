@page "/systemcodesdetails-list"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime

<h3>System Codes Details List</h3>

<div class="container">
	<div class="row">
		<p><a class="btn btn-success fload-end" href="/add-systemCodeDetail">Add New System Code Details</a></p>
		<div class="col-md-12">
			<div class="card">
				<div class="card-header"></div>
				@if (!AllSystemCodesDetails.Any())
				{
					<p><em>Loading System Codes Details...</em></p>
				}
				@if (AllSystemCodesDetails.Any())
				{
					<div class="card-body">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Id</th>
									<th>Code</th>
									<th>Description</th>
									<th>System Code</th>
									<th>Edit</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var country in AllSystemCodesDetails)
								{
									<tr>
										<td>@country.Id</td>
										<td>@country.Code</td>
										<td>@country.Description</td>
										<td>@country.SystemCode.Description</td>
										<td>
											<a class="btn btn-success" href="/system-code-detail/edit/@country.Id"> Edit </a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				}
				else
				{
					<div class="alert alert-info">System Codes Details List Availlable</div>
				}
			</div>
		</div>
	</div>
</div>

@code {
	private List<SystemCodeDetail> AllSystemCodesDetails = new();

	public SystemCodeDetail systemcodedetails = new SystemCodeDetail();

	protected override async Task OnInitializedAsync()
	{
		await LoadAllSystemCodesDetails();
	}

	private async Task LoadAllSystemCodesDetails()
	{
		var systemcodes = await SystemCodeDetailService.GetAllAsync();

		if (systemcodes is null) return;

		AllSystemCodesDetails.Clear();
		AllSystemCodesDetails.AddRange(systemcodes);
	}
}
