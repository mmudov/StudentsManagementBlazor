@page "/returned-history-list"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementBlazor.Shared.Models
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@*@rendermode InteractiveAuto*@

<div class="container">
	<div class="row">
		<div class="col-md-12">
			<div class="card">
				<div class="card-header"></div>
				@if (!AllBookReturnedHistory.Any())
				{
					<p><em>Loading Returned Books History...</em></p>
				}
				@if (AllBookReturnedHistory.Any())
				{
					<div class="card-body">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Id</th>
									<th>Issue Date</th>
									<th>Due Date</th>
									<th>Student Name</th>
									<th>Book Name</th>
									<th>Return Date</th>
									<th>Status</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var issue in AllBookReturnedHistory)
								{
									<tr>
										<td>@issue.Id</td>
										<td>@issue.IssueData</td>
										<td>@issue.DueData</td>
										<td>@issue.Student.FullName</td>
										<td>@issue.Book.Name</td>
										<td>@issue.ReturnData</td>
										<td class="text-warning">@issue.Status.Code</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				}
				else
				{
					<div class="alert alert-info">There is no Returned Books History Available</div>
				}
			</div>
		</div>
	</div>
</div>

@code {
	private List<BookIssuance> AllBookReturnedHistory = new List<BookIssuance>();

	protected override async Task OnInitializedAsync()
	{
		await LoadAllAllBookIssuancesHistory();
	}

	private async Task LoadAllAllBookIssuancesHistory()
	{
		var data = await IssuanceService.GetAllAsync();
		//var returnedBooks = data.Where(x => x.ReturnData != null);
		var returnedBooks = data.Where(x => x.Status.Code == "Returned");

		AllBookReturnedHistory.Clear();

		if (returnedBooks is null) return;

		AllBookReturnedHistory.Clear();

		AllBookReturnedHistory.AddRange(returnedBooks);
	}
}
