@page "/grade/edit/{id:int}"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementBlazor.Shared.Models
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer

<h3>Update Grade Details</h3>
<hr />
<div class="row">
	<div class="com-md-12">
		<EditForm Model="gradeobj" OnValidSubmit="UpdateGrade" FormName="updategrade">
			<DataAnnotationsValidator />
			<ValidationSummary />
			<div class="col-md-12">
				<div class="row">
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Grade Code</label>
							<InputText for="GradeCode" class="form-control" @bind-Value="@gradeobj.GradeCode" />
							<ValidationMessage For="()=>gradeobj.GradeCode" />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Grade Name</label>
							<InputText for="GradeName" class="form-control" @bind-Value="@gradeobj.GradeName" />
							<ValidationMessage For="()=>gradeobj.GradeName" />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Grade Point</label>
							<InputText for="GradePoint" class="form-control" @bind-Value="@gradeobj.GradePoint" />
							<ValidationMessage For="()=>gradeobj.GradePoint" />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Mark From</label>
							<InputNumber for="MarkForm" class="form-control" @bind-Value="@gradeobj.MarkForm" />
							<ValidationMessage For="()=>gradeobj.MarkForm" />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Mark To</label>
							<InputNumber for="MarkTo" class="form-control" @bind-Value="@gradeobj.MarkTo" />
							<ValidationMessage For="()=>gradeobj.MarkTo" />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="control-label">Notes</label>
							<InputTextArea for="Notes" class="form-control" @bind-Value="@gradeobj.Notes" />
							<ValidationMessage For="()=>gradeobj.Notes" />
						</div>
					</div>
					<div class="form-group mt-4">
						<button type="submit" class="btn btn-primary">Update Grade</button>
						<button type="button" @onclick="Cancel" class="btn btn-danger">Cancel</button>
					</div>
				</div>
			</div>
		</EditForm>
	</div>
</div>

@code {
	[SupplyParameterFromForm]
	public Grade gradeobj { get; set; } = new();

	[Parameter]
	public int id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await LoadGrades();
	}

	private async Task LoadGrades()
	{
		gradeobj = await GradeService.GetByIdAsync(id);
	}

	protected async Task UpdateGrade()
	{
		var result = await GradeService.UpdateAsync(gradeobj);

		navigation.NavigateTo("/grades-list");
	}
	public void Cancel()
	{
		navigation.NavigateTo("/grades-list");
	}
}
