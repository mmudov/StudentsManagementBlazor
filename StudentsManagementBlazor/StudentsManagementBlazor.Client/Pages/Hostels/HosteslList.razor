@page "/hostel-list"
@using StudentsManagementBlazor.Client.Services;
@using StudentsManagementShared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime

<div class="container">
	<div class="row">
		<p><a class="btn btn-success fload-end" href="/add-hostel">Add New Hostel</a></p>
		<div class="col-md-12">
			<div class="card">
				<div class="card-header"></div>
				@if (!AllHostels.Any())
				{
					<p><em>Loading Hostels...</em></p>
				}
				@if (AllHostels.Any())
				{
					<div class="card-body">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Id</th>
									<th>Hostel Name</th>
									<th>Hostel Address</th>
									<th>Hostel Description</th>
									<th>Edit</th>
									<th>Delete</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var hostel in AllHostels)
								{
									<tr>
										<td>@hostel.Id</td>
										<td>@hostel.HostelName</td>
										<td>@hostel.Address</td>
										<td>@hostel.Description</td>
										<td>
											<a class="btn btn-success" href="/hostel/edit/@hostel.Id"> Edit </a>
										</td>
										<td>
											<a class="btn btn-danger" href="/hostel/delete/@hostel.Id"> Delete </a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				}
				else
				{
					<div class="alert alert-info">There is no Hostels List Available</div>
				}
			</div>
		</div>
	</div>
</div>

@code {
	private List<Hostel> AllHostels = new();

	protected override async Task OnInitializedAsync()
	{
		await LoadAllHostels();
	}

	private async Task LoadAllHostels()
	{
		var hostels = await HostelService.GetAllAsync();

		if (hostels is null) return;

		AllHostels.Clear();
		AllHostels.AddRange(hostels);
	}
}
